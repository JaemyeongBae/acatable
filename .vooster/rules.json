{
  "rules": [
    {
      "type": "prd",
      "content": "# 제품 요구사항 문서(PRD)\n\n## 1. 요약\n학원 시간표를 웹에서 한눈에 확인·관리할 수 있는 서비스. 요일·강사·강의실·수업종류 등 다중 필터로 원하는 뷰를 빠르게 찾고, 관리자(원장·행정)와 강사·학생 모두 편리하게 열람·편집 가능. Next.js + TypeScript 기반 반응형 웹 제공.\n\n## 2. 문제 정의\n- 행정 담당자는 엑셀·종이·채팅방 등 분산된 도구로 시간표를 작성·수정·전파해 비효율·오류·중복 발생.  \n- 강사·학생은 최신 시간표를 실시간으로 확인하기 어렵고, 변경 사항을 놓치기 쉬움.  \n- 학원별 권한 관리 기능 부족으로 데이터 노출 위험.\n\n## 3. 목표 및 지표\nPrimary Goal: 학원 시간표의 작성·공유·조회 프로세스 통합 및 자동화  \nSecondary Goals:  \n- 시간표 변경 시 실시간 알림 제공  \n- 권한 기반 뷰 제공으로 정보 보안 강화  \nSuccess Metrics:  \n- 관리자가 시간표 최초 등록까지 걸린 평균 시간 50%↓  \n- 월간 활성 사용자(MAU) 70% 이상  \n- 시간표 오류(중복·누락) 신고 건수 80%↓  \n- 페이지 로드 ≤2초, 필터 응답 ≤300ms\n\n## 4. 타깃 사용자\nPrimary\n- 학원 행정실장: 매일 시간표 입력·수정·출력  \n- 학원 원장: 운영 현황 파악  \n- 강사: 담당 강의 확인, 교실·시간 충돌 체크  \nSecondary\n- 학생·학부모: 수업 시간 확인  \n- IT 관리자: 시스템 유지보수\n\n## 5. 사용자 스토리\n- 행정실장으로서, 과목·강사·강의실을 입력해 시간표를 생성하여 혼란 없이 배정하고 싶다.  \n- 강사로서, 내 강의만 필터링해 이동 중에도 모바일로 확인하고 싶다.  \n- 학생으로서, 요일별 보기로 내 수업 시간을 빠르게 확인하고 싶다.  \n- 원장으로서, 변경 즉시 모두에게 알림이 발송돼 민원을 줄이고 싶다.\n\n## 6. 기능 요구사항\n### 핵심 기능\n1. 시간표 입력/관리  \n   - CRUD: 과목, 강사, 강의실, 수업종류, 강의명, 시간  \n   - 중복·시간 충돌 실시간 검증  \n   - Acceptance: 저장 시 필드 검증, 충돌 발생 시 경고 및 저장 불가  \n\n2. 시간표 조회  \n   - 뷰: 한눈에(주간 그리드), 요일별, 강사별, 강의실별, 수업종류별  \n   - 체크박스·토글 필터(다중 선택)  \n   - Acceptance: 필터 1초 이내 적용, URL 쿼리로 공유 가능  \n\n3. 학원별 계정/권한  \n   - 회원가입 시 학원 코드 생성 또는 초대  \n   - 역할: 원장(전체 권한), 행정실장(편집), 강사·학생(조회)  \n   - JWT 기반 인증  \n\n### 부가 기능(Nice-to-have)\n- 변경 이력(버전관리) 및 롤백  \n- 이미지 저장\n- 알림: 이메일·푸시·카카오워크 등 선택 가능  \n- 다국어(한국어, 영어) 지원\n\n## 7. 비기능 요구사항\n- 성능: 95점 이상 Lighthouse, TTFB <200ms (CDN)  \n- 보안: TLS 1.3, OWASP Top10 대응, Role-Based Access Control  \n- 사용성: 모바일·태블릿 1열 뷰, WCAG 2.1 AA  \n- 확장성: 학원 10,000곳, 동시접속 5,000명 지원  \n- 호환성: 최신 Chrome, Safari, Edge, Firefox  \n- 가용성: 99.9% 월간 업타임(SLA)\n\n## 8. 기술 고려\n- 프론트엔드: Next.js 14, TypeScript, Tailwind CSS, SWR/React Query  \n- 백엔드: Node.js (NestJS) + PostgreSQL, Prisma ORM  \n- 실시간: WebSocket(SockJS) 또는 Next.js App Router + Server Actions  \n- 배포: Vercel / AWS (ECS + RDS) + CloudFront CDN  \n- 인증: JWT + Refresh, OAuth(구글·카카오)  \n- 모니터링: Sentry, Datadog, Grafana  \n- 테스트: Jest, Playwright, Cypress\n\n## 9. 성공 지표\n- 사용자 지표: DAU/MAU, 반복 방문률 60%  \n- 비즈니스 지표: 서비스 유료 구독 전환율 5% (원장 대상)  \n- 기술 지표: 에러율 <0.1%, P95 응답 <500ms\n\n## 10. 일정 및 마일스톤\n| 단계 | 기간 | 주요 산출물 |\n| --- | --- | --- |\n| 1. 기획 확정 | W1-W2 | 요구사항 동결, UX 와이어프레임 |\n| 2. MVP 개발 | W3-W8 | 핵심 기능 1~3, 기본 뷰, 로그인 |\n| 3. 베타 오픈 | W9-W10 | 선택 학원 3곳 도입, 피드백 수집 |\n| 4. 정식 출시 | W11-W12 | 결제, 알림, 배포 자동화 |\n| 5. 고도화 | Q2 | 캘린더 연동, PWA, 다국어 |\n\n## 11. 리스크 및 대응\n- 데이터 마이그레이션 지연 → Excel 업로드 템플릿 제공  \n- 사용자 온보딩 미흡 → 인앱 튜토리얼, FAQ, 영상 가이드  \n- 실시간 충돌 처리 복잡 → 트랜잭션·락 설계, 테스트 케이스 확대  \n- 브라우저 호환 이슈 → Playwright 크로스 브라우저 CI\n\n## 12. 향후 계획\n- AI 자동 배정(최대인원 등을 고려하여 강의실·시간 추천)  \n- 출결·숙제 관리 모듈 연동  \n- 모바일 전용 앱(React Native)  \n- 서드파티 LMS·ERP API 마켓플레이스 구축",
      "writedAt": "2025-07-01T11:23:01.802Z"
    }
  ]
}